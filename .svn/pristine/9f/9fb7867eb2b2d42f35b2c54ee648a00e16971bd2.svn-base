<!--
程序名：用户管理
功能：管理网站的所有用户
-->
<template>
<el-table :data="userList" :default-sort = "{prop: 'date', order: 'descending'}" :height = 'screenHeight' border>
        <el-table-column prop="sn" sortable label="编号" width="140" >
        </el-table-column>
        <el-table-column prop="fullName" label="姓名" width="150">
        </el-table-column>
        <el-table-column prop="dutyName" label="职位" width="120">
        </el-table-column>
        <el-table-column prop="unitFullName" label="单位全名">
        </el-table-column>
        <el-table-column prop="enabledMark" label="启用状态"  :formatter="enabledMarkFormat" width="100">
        </el-table-column>
    <el-table-column
      align="right" fixed='right' width="200">
      <template slot="header" slot-scope="scope">
        <el-input 
          v-model="searchStr"
          size="mini"
          placeholder="输入关键字搜索" :input='searchRole(scope)'/>
      </template>
      <template slot-scope="scope">
        <el-button
          size="mini"
          @click="handleEdit(scope.$index, scope.row)">编辑</el-button>
        <el-button
          size="mini"
          type="danger"
          @click="handleDelete(scope.$index, scope.row)">删除</el-button>
      </template>
    </el-table-column>
      </el-table>
</template>

<script>
export default {
  data() {
      return {
        userList: [], //用户信息
        searchStr:'', //搜索条件
        screenHeight: window.innerHeight - 150,//当前窗体高度-导航栏高度
      }
    },
components:{
},
 methods: {
      handleEdit(index, row) {
        console.log(index, row);
      },
      handleDelete(index, row) {
        console.log(index, row);
      },
      formatter(row, column) {
        return row.address;
      },
      //搜索
      //当输入框内容发生改变时或者失去输入框焦点时触发
      searchRole(scope){
        console.log(this.searchStr + '搜索');
        this.getAllUserList();
      },
       //获取问卷列表
      getAllUserList(){
        this.loading=true;
        this.$axios.get("/user/queryGridJson").then( (res) => {
            this.userList = res.data.data.rows;
        })
        },
      //数据格式化
      enabledMarkFormat(row, column){
          if (row.enabledMark === true) {
       return '启用'
      } else  {
      return '未启用'
    } 
      }
    },
  mounted () {
    //监听当前窗口高度
    window.onresize = () => {
      return (() => {
        this.screenHeight = window.innerHeight
      })()
    };
    this.getAllUserList();
  },
    
}
</script>

<style>

</style>